////////////////////////////////////////////////////////////////////////////////
// range ///////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function range(start, end, step) {
var array = [];
if(typeof step === 'undefined'){
  step = 1
}else if(typeof step === 'undefined' && start > end){
  step = -1;
}
console.log(step)
if(end > start && step > 0){
  for(let i = start; i <= end; i += step){
    array.push(i)
  }
}else if(start > end && step < 0){
  for(let i = start; i >= end; i += step){
    console.log(i)
    array.push(i);
  }
}
return array
}

////////////////////////////////////////////////////////////////////////////////
// sum /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function sum(array) {
var total = 0;
for(let i = 0; i < array.length; i++){
  total += array[i]
}
return total
}

////////////////////////////////////////////////////////////////////////////////
// reverseArray ////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArray(array) {
var reversed = [];
for(let i = 0; i < array.length; i++){
  reversed[i] = array[array.length - 1 - i];
}
return reversed
}

////////////////////////////////////////////////////////////////////////////////
// reverseArrayInPlace /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function reverseArrayInPlace(array) {
var reversed = [];
for(let i = 0; i < array.length; i++){
  reversed[i] = array[i]
}
for(let i = 0; i < array.length; i++){
  array[i] = reversed[array.length - 1 - i];
}
return array
}

////////////////////////////////////////////////////////////////////////////////
// arrayToList /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function arrayToList(array) {
var rest = null;
for(let i = array.length - 1; i >= 0; i--){
  rest = {value: array[i], rest: rest};
}
return rest
}

////////////////////////////////////////////////////////////////////////////////
// listToArray /////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function listToArray(list, array = []) {
if(list.rest === null){
  array.push(list.value)
  return array
}
array.push(list.value)
return listToArray(list.rest, array);
}

////////////////////////////////////////////////////////////////////////////////
// prepend /////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function prepend(value, list) {
return {value, rest: list}
}

////////////////////////////////////////////////////////////////////////////////
// nth /////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function nth(list, n) {
if(!list){
  return undefined;
}
if(n == 0){
  return list.value
}
return nth(list.rest, n - 1)
}

////////////////////////////////////////////////////////////////////////////////
// deepEqual ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function deepEqual(x, y) {
if(typeof x !== 'object' && typeof y !== 'object'){
  return x === y;
}
if(typeof x !== 'object' || typeof y !== 'object'){
  return false
}
let xKeys = Object.keys(x)
let yKeys = Object.keys(y);
if(xKeys.length != yKeys.length){
  return false
}
for(let i = 0; i < xKeys.length; i++){
  if(!yKeys.includes(xKeys[i]) || !deepEqual(x[xKeys[i]], y[yKeys[i]])){
    return false;
  }
}
return true
}

////////////////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE //////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    range,
    sum,
    reverseArray,
    reverseArrayInPlace,
    arrayToList,
    listToArray,
    prepend,
    nth,
    deepEqual,
  };
};
